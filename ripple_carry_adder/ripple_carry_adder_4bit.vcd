$date
	Wed Dec  2 22:38:34 2020
$end
$version
	Icarus Verilog
$end
$timescale
	1ps
$end
$scope module tb_ripple_carry_adder_4bit $end
$var wire 4 ! sum [3:0] $end
$var wire 1 " cout $end
$var reg 4 # a [3:0] $end
$var reg 4 $ b [3:0] $end
$scope module comp_1 $end
$var wire 4 % A [3:0] $end
$var wire 4 & B [3:0] $end
$var wire 4 ' Sum [3:0] $end
$var wire 1 " Cout $end
$var wire 1 ( C3 $end
$var wire 1 ) C2 $end
$var wire 1 * C1 $end
$scope module comp_1 $end
$var wire 1 + A $end
$var wire 1 , B $end
$var wire 1 - Cin $end
$var wire 1 * Cout $end
$var wire 1 . Sum $end
$var wire 1 / HA2_Cout $end
$var wire 1 0 HA1_Sum $end
$var wire 1 1 HA1_Cout $end
$scope module comp_1 $end
$var wire 1 + A $end
$var wire 1 , B $end
$var wire 1 1 Cout $end
$var wire 1 0 Sum $end
$upscope $end
$scope module comp_2 $end
$var wire 1 0 A $end
$var wire 1 - B $end
$var wire 1 / Cout $end
$var wire 1 . Sum $end
$upscope $end
$upscope $end
$scope module comp_2 $end
$var wire 1 2 A $end
$var wire 1 3 B $end
$var wire 1 * Cin $end
$var wire 1 ) Cout $end
$var wire 1 4 Sum $end
$var wire 1 5 HA2_Cout $end
$var wire 1 6 HA1_Sum $end
$var wire 1 7 HA1_Cout $end
$scope module comp_1 $end
$var wire 1 2 A $end
$var wire 1 3 B $end
$var wire 1 7 Cout $end
$var wire 1 6 Sum $end
$upscope $end
$scope module comp_2 $end
$var wire 1 6 A $end
$var wire 1 * B $end
$var wire 1 5 Cout $end
$var wire 1 4 Sum $end
$upscope $end
$upscope $end
$scope module comp_3 $end
$var wire 1 8 A $end
$var wire 1 9 B $end
$var wire 1 ) Cin $end
$var wire 1 ( Cout $end
$var wire 1 : Sum $end
$var wire 1 ; HA2_Cout $end
$var wire 1 < HA1_Sum $end
$var wire 1 = HA1_Cout $end
$scope module comp_1 $end
$var wire 1 8 A $end
$var wire 1 9 B $end
$var wire 1 = Cout $end
$var wire 1 < Sum $end
$upscope $end
$scope module comp_2 $end
$var wire 1 < A $end
$var wire 1 ) B $end
$var wire 1 ; Cout $end
$var wire 1 : Sum $end
$upscope $end
$upscope $end
$scope module comp_4 $end
$var wire 1 > A $end
$var wire 1 ? B $end
$var wire 1 ( Cin $end
$var wire 1 " Cout $end
$var wire 1 @ Sum $end
$var wire 1 A HA2_Cout $end
$var wire 1 B HA1_Sum $end
$var wire 1 C HA1_Cout $end
$scope module comp_1 $end
$var wire 1 > A $end
$var wire 1 ? B $end
$var wire 1 C Cout $end
$var wire 1 B Sum $end
$upscope $end
$scope module comp_2 $end
$var wire 1 B A $end
$var wire 1 ( B $end
$var wire 1 A Cout $end
$var wire 1 @ Sum $end
$upscope $end
$upscope $end
$upscope $end
$upscope $end
$enddefinitions $end
#0
$dumpvars
0C
0B
0A
0@
0?
0>
0=
0<
0;
0:
09
08
07
06
05
04
03
02
01
00
0/
0.
0-
0,
0+
0*
0)
0(
b0 '
b0 &
b0 %
b0 $
b0 #
0"
b0 !
$end
#1000
b10 !
b10 '
14
1*
11
1,
1+
b1 $
b1 &
b1 #
b1 %
#2000
04
b100 !
b100 '
1:
0*
1)
01
17
0,
13
0+
12
b10 $
b10 &
b10 #
b10 %
#3000
0:
b1000 !
b1000 '
1@
0)
1(
07
1=
03
19
02
18
b100 $
b100 &
b100 #
b100 %
#4000
b0 !
b0 '
0@
0(
1"
0=
1C
09
1?
08
1>
b1000 $
b1000 &
b1000 #
b1000 %
