$date
	Sat Dec  5 23:08:31 2020
$end
$version
	Icarus Verilog
$end
$timescale
	1s
$end
$scope module tb_shift_register $end
$var wire 4 ! z [3:0] $end
$var wire 4 " y [3:0] $end
$var wire 4 # x [3:0] $end
$var wire 4 $ w [3:0] $end
$var reg 1 % clock $end
$var reg 4 & d [3:0] $end
$scope module comp_1 $end
$var wire 1 % Clock $end
$var wire 4 ' D [3:0] $end
$var reg 4 ( W [3:0] $end
$var reg 4 ) X [3:0] $end
$var reg 4 * Y [3:0] $end
$var reg 4 + Z [3:0] $end
$upscope $end
$upscope $end
$enddefinitions $end
#0
$dumpvars
bx +
bx *
bx )
bx (
b0 '
b0 &
0%
bx $
bx #
bx "
bx !
$end
#1
b0 $
b0 (
1%
#2
0%
b1010 &
b1010 '
#3
b0 #
b0 )
b1010 $
b1010 (
1%
#4
0%
#5
b0 "
b0 *
b1010 #
b1010 )
1%
#6
0%
#7
b0 !
b0 +
b1010 "
b1010 *
1%
#8
0%
#9
b1010 !
b1010 +
1%
